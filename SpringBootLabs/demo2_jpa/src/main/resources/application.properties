spring.application.name=demo2_jpa

#포트 설정 
server.port=8090

#DB 직업
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=springuser
spring.datasource.password=1004
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

#Pool 설정 
#maximum-pool-size 설정 
#JPA 설정
#객체 매핑(select , class 구조가 다르다)
# DB와 자바 객체의 구조가 다르다..
# Mybatis에서는 mapper 작업(쿼리문 따로 관리)
# JPA 클래스 가지고 테이블도 생성하고 CRUD 메서드까지 자동으로 만들어준다
spring.jpa.hibernate.ddl-auto=none
#create하면 테이블을 만듬.. (서버 재시작 시 : drop하고 create한다), 개발 초기
#update로 설정하면 실행 시 변경 사항이 있으면 alter함(처음엔 create한다고) -> 개발중
#이것도 실 배포 시 문제가 있음
#update는 변경된 것만 반영함
# 배포 시에는 none으로 해야한다(아무 작업도 하지 말라) -> 배포 시 설정
# create로 하면 데이터 다 날아갈 수 있다고 함

spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
# 방언 같은 설정.. 설정 해놓은 그 DB에 맞게 바꿔준다고 함(쿼리 설정)

#Thymeleaf
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html

# 한글 처리
spring.thymeleaf.encoding=UTF-8
