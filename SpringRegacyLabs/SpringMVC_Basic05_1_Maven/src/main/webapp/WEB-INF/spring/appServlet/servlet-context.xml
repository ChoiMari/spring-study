<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
xml 파일
IOC 컨테이너에 적재될 bean 객체 생성과 injection (DI)

1. 필용한 controller 생성하고 bean 객체 생성 , injection
2. 현재 >> 하나의 클래스가 method 단위로 요청을 처리하는 것은 조금 뒤에 ...
   현재 controller 하나당 요청 하나를 처리 ....
   결과 : 하나의 클래스가 method 단위로 요청을 처리
   
 controller 요청당 한개
   요청 :   게시판 목록보기 (행위 업무)
                게시판 글쓰기
                게시판 글 수정하기
          
  localhost:8090/website/customer/notice.htm
  
  @AutoWired
-->	

<context:annotation-config />
<context:component-scan base-package="ncontroller" />
<context:component-scan base-package="service" />
<context:component-scan base-package="dao" />
<!-- 
	@Contoller, 
     @Service, 
     @Repository, 
     @Component  
     @RestController  이 에노테이션이 붙은 클래스는 
     컴포넌트 스캔 태그를 여기에 추가 함으로써
     자동으로 스프링이 관리하는(기본 싱글톤) *** 빈 객체가 생성된다(설정해둔 패키지 단위로 스캔해서 자동 빈등록) ****-->

<!-- scan써서 이제 개별 bean등록 안하고 @애너티이션 붙은건 간편하게 스캔해서 bean으로 등록하기 때문에
모든 컨트롤러가 공통 사용 DAO 빈 객체  참조
<bean  id="noticeDao"   class="dao.NoticeDao"></bean>
<bean  id="memberDao"   class="dao.MemberDao"></bean>
그래서 이건 이제 필요없음
 -->




</beans> 


