<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
xml 파일
IOC 컨테이너에 적재될 bean 객체 생성과 injection (DI)

1. 필용한 controller 생성하고 bean 객체 생성 , injection
2. 현재 >> 하나의 클래스가 method 단위로 요청을 처리하는 것은 조금 뒤에 ...
   현재 controller 하나당 요청 하나를 처리하고 있음
   나중에 클래스의 메서드가 1개의 요청을 담당하게 할 것이다.
   예시) 컨트롤러 1개의 4개의 메서드(CRUD)를 만들어서 처리
   결과 : 하나의 클래스가 method 단위로 요청을 처리
   
 controller 요청당 한개
   요청 :   게시판 목록보기 (행위 업무)
                게시판 글쓰기
                게시판 글 수정하기
          
  localhost:8090/website/customer/notice.htm
  
  @AutoWired
  
  여기에 bean태그로 쓴 객체가 만들어지면서 @AutoWired으로 주입이 됨
-->	
<!-- 모든 컨트롤러가 공통 사용 DAO 빈 객체  참조-->
<context:annotation-config /><!-- 오토와이어드애너테이션이 동작하기 위한 선행객체를 메모리에 올림 -->
<bean  id="noticeDao"                      class="dao.NoticeDao"></bean>
<bean  id="/customer/notice.htm"           class="controllers.customer.NoticeController"></bean>
<bean  id="/customer/noticeDetail.htm"     class="controllers.customer.NoticeDetailController"></bean>	
</beans> 


